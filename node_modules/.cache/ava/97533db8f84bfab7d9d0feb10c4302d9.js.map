{"version":3,"sources":["test-simple.js"],"names":["readTestFile","testfile","testPath","path","join","__dirname","Promise","res","rej","fs","readFile","err","data","t","rtfData","encoding","console","log","converter","RtfToDeltaConverter","delta","convert","JSON","stringify","is","Delta","hasOwnProperty"],"mappings":"AAAA;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;;;AAGA,SAASA,YAAT,CAAsBC,QAAtB,EAAgC;AAC9B,MAAIC,WAAWC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,MAArB,EAA6BJ,QAA7B,CAAf;AACA,SAAO,IAAIK,OAAJ,CAAY,CAACC,GAAD,EAAKC,GAAL,KAAa;AAC9BC,iBAAGC,QAAH,CAAYR,QAAZ,EAAsB,CAACS,GAAD,EAAKC,IAAL,KAAc;AAClC,UAAID,GAAJ,EAASH,IAAIG,GAAJ,EAAT,KACKJ,IAAIK,IAAJ;AACN,KAHD;AAID,GALM,CAAP;AAMD;;AAED,mBAAK,YAAL,EAAmB,MAAMC,CAAN,IAAW;;AAE5B,MAAIC,UAAU,MAAMd,aAAa,gBAAb,EAA+B,EAACe,UAAU,OAAX,EAA/B,CAApB;AACAC,UAAQC,GAAR,CAAY,OAAOH,OAAnB;AACA,MAAII,YAAY,IAAIC,UAAJ,EAAhB;AACA,MAAIC,QAAQ,MAAMF,UAAUG,OAAV,CAAkBP,OAAlB,CAAlB;AACAE,UAAQC,GAAR,CAAYK,KAAKC,SAAL,CAAeH,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAZ;;AAEAP,IAAEW,EAAF,CAAKJ,iBAAiBK,oBAAtB,EAA6B,aAA7B;AACAZ,IAAEW,EAAF,CAAKJ,MAAMM,cAAN,CAAqB,KAArB,CAAL,EAAkC,gBAAlC;AAED,CAXD","file":"test-simple.js","sourcesContent":["'use strict';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\n\r\nimport test from 'ava';\r\nimport Delta from 'quill-delta';\r\n\r\nimport RtfToDeltaConverter from '..';\r\n\r\n\r\nfunction readTestFile(testfile) {\r\n  let testPath = path.join(__dirname, 'data', testfile);\r\n  return new Promise((res,rej) => {\r\n    fs.readFile(testPath, (err,data) => {\r\n      if (err) rej(err);\r\n      else res(data);\r\n    });\r\n  });\r\n}\r\n\r\ntest('test color', async t => {\r\n\r\n  let rtfData = await readTestFile('test-color.rtf', {encoding: 'ascii'});\r\n  console.log(typeof rtfData);\r\n  let converter = new RtfToDeltaConverter();\r\n  let delta = await converter.convert(rtfData);\r\n  console.log(JSON.stringify(delta, null, 2));\r\n\r\n  t.is(delta instanceof Delta, 'class check');\r\n  t.is(delta.hasOwnProperty('ops'), 'property check');\r\n\r\n});\r\n\r\n"]}